/**
 *Submitted for verification at Etherscan.io on 2017-12-25
*/

pragma solidity ^0.4.18;
/**
 * Holds funds for a year.  Send to or deposit directly to this contract.
 * Each new acccount is initialized with a 1 year hold period, and is only 
 * retrievable from the designated address after the set hold time.
*/
contract HodlerInvestmentClub {
    uint public interval= 1 years;
    uint public mhodlers = 1;
    
    mapping(address => uint) public hodlersvalue;
    mapping(address => uint) public hodlerstime;
    
    modifier onlyHodler {
        require(hodlersvalue[msg.sender] > 0);
        _;
    }
    
    /* Constructor */
    function HodlerInvestmentClub() payable public {
        hodlersvalue[msg.sender] = msg.value;
        hodlerstime[msg.sender] = now + interval;
    }
    
    // join the club!
    // make a deposit to another account if it exists 
    // or initialize a deposit for a new account
    function deposit(address _to) payable public {
        // if a new member, init a hodl time
        if (hodlerstime[_to] == 0) {
            hodlerstime[_to] = now + interval;
            mhodlers += 1;
        } 
        hodlersvalue[_to] += msg.value;
    }
    
    // withdrawal can only occur after deposit time is exceeded
    function withdraw() public onlyHodler {
        require(hodlerstime[msg.sender] <= now);
        uint256 value = hodlersvalue[msg.sender];
        hodlersvalue[msg.sender] = 0;
        require(msg.sender.send(value));
    }
    

}
