/**
 *Submitted for verification at Etherscan.io on 2018-02-28
*/

pragma solidity ^0.4.18;

contract Token {
    
    function transfer(address _to, uint256 _value) public returns (bool success) {
        require(balances[msg.sender] >= _value && _value > 0);
        balances[msg.sender] -= _value;
        balances[_to] += _value;
        Transfer(msg.sender, _to, _value);
    }
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
        require(balances[_from] >= _value && allowed[_from][msg.sender] >= _value && _value > 0);
        balances[_to] += _value;
        balances[_from] -= _value;
        allowed[_from][msg.sender] -= _value;
        Transfer(_from, _to, _value);
    }
    function balanceOf(address _owner) constant public returns (uint256 balance) {
        return balances[_owner];
    }
    function approve(address _spender, uint256 _value) public returns (bool success) {
        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
        return true;
    }
    function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {
      return allowed[_owner][_spender];
    }
    mapping (address => uint256) balances;
    mapping (address => mapping (address => uint256)) allowed;
    uint256 public totalSupply;
    event Transfer(address indexed _from, address indexed _to, uint256 _value);
    event Approval(address indexed _owner, address indexed _spender, uint256 _value);
}

contract TUStoken is Token {
    string public version = "0x02"; 

    string public name;
    uint8 public decimals;
    string public symbol;

    uint256 public totalEthInWei;
    address public hommie; 
    uint public stopsale;

    uint256 public JP_sum;
    address public JP_winner;
    bytes32 public JP_winningHash;

    function TUStoken() public {
        totalSupply = 0; 
        hommie = msg.sender;

        name = "true underground system token";
        decimals = 0;
        symbol = "TU$";

        totalEthInWei = 0;
        stopsale = 1522804800;   // 04.04.2018 |__4:20__| MSK (GMT+3)

        JP_sum = 0;
        JP_winner = hommie;
        JP_winningHash = "";
        
    }

    function finishICO() public {
        require(msg.sender == hommie);
        require(now > stopsale);
        uint256 tempo = JP_sum;
        JP_sum = 0;
        JP_winner.transfer(tempo);
    }


}
